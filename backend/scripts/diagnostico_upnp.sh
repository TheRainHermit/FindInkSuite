#!/bin/bash

# üîç Detectar estado UPnP y obtener IP p√∫blica de forma segura
# ===========================================================

echo "üîç DIAGN√ìSTICO UPnP Y CONECTIVIDAD"
echo "=================================="

# 1. Detectar IP p√∫blica
echo "üåç Obteniendo IP p√∫blica..."
PUBLIC_IP=$(curl -s --connect-timeout 5 ifconfig.me 2>/dev/null || curl -s --connect-timeout 5 ipinfo.io/ip 2>/dev/null || echo "Error obteniendo IP")
echo "   IP P√∫blica: $PUBLIC_IP"

# 2. Verificar UPnP en diferentes interfaces
echo ""
echo "üì° Probando descubrimiento UPnP en interfaces..."

# Probar sin especificar interfaz
echo "   Sin interfaz espec√≠fica:"
upnpc -s 2>/dev/null | head -10 | grep -E "(Found|ExternalIPAddress|desc:|Local LAN ip address)" || echo "     ‚ùå No detectado"

# Probar con interfaz eth0
echo "   Con interfaz eth0:"
upnpc -m eth0 -s 2>/dev/null | head -10 | grep -E "(Found|ExternalIPAddress|desc:|Local LAN ip address)" || echo "     ‚ùå No detectado en eth0"

# Probar descubrimiento con timeout
echo "   Con timeout extendido:"
timeout 10 upnpc -s -t 5000 2>/dev/null | head -10 | grep -E "(Found|ExternalIPAddress|desc:|Local LAN ip address)" || echo "     ‚ùå No detectado con timeout"

# 3. Verificar gateway/router
echo ""
echo "üè† Informaci√≥n del router:"
DEFAULT_GW=$(ip route | grep default | awk '{print $3}' | head -1)
echo "   Gateway por defecto: $DEFAULT_GW"

if [ ! -z "$DEFAULT_GW" ]; then
    echo "   Ping al router:"
    ping -c 2 -W 2 "$DEFAULT_GW" >/dev/null 2>&1 && echo "     ‚úÖ Router accesible" || echo "     ‚ùå Router no responde"
    
    # Intentar UPnP directamente al gateway
    echo "   UPnP directo al gateway:"
    upnpc -u "http://$DEFAULT_GW:1900" -s 2>/dev/null | head -5 | grep -E "(Found|ExternalIPAddress)" || echo "     ‚ùå UPnP no responde en puerto 1900"
fi

# 4. Verificar puertos multicast UPnP
echo ""
echo "üîç Verificando conectividad multicast UPnP:"
echo "   Intentando SSDP multicast..."
(echo -e "M-SEARCH * HTTP/1.1\r\nHOST: 239.255.255.250:1900\r\nMAN: \"ssdp:discover\"\r\nST: upnp:rootdevice\r\nMX: 3\r\n\r\n" | nc -u -w 3 239.255.255.250 1900 2>/dev/null | head -5) || echo "     ‚ùå Sin respuesta SSDP"

# 5. Probar herramientas alternativas
echo ""
echo "üß™ Herramientas UPnP alternativas:"

# upnpc con diferentes modos
echo "   upnpc lista de dispositivos:"
upnpc -l 2>/dev/null | head -5 | grep -E "(Found|device|ExternalIPAddress)" || echo "     ‚ùå No hay lista de dispositivos"

# Verificar si hay miniupnpd local
if pgrep miniupnpd >/dev/null 2>&1; then
    echo "   ‚úÖ miniupnpd corriendo localmente"
else
    echo "   ‚ÑπÔ∏è miniupnpd no est√° corriendo (normal)"
fi

# 6. Estado de los servicios locales
echo ""
echo "üîß Estado de servicios locales:"
echo "   WireGuard (UDP 51820):"
ss -ulnp | grep :51820 >/dev/null && echo "     ‚úÖ Escuchando" || echo "     ‚ùå No escuchando"

echo "   Servidor API (TCP 8001):"
ss -tlnp | grep :8001 >/dev/null && echo "     ‚úÖ Escuchando" || echo "     ‚ùå No escuchando"

# 7. Resumen y recomendaciones
echo ""
echo "üìã RESUMEN:"
echo "==========="

if upnpc -s 2>/dev/null | grep -q "Found"; then
    echo "‚úÖ UPnP DETECTADO - Puedes usar mapeos autom√°ticos"
    echo "   Ejecuta: ./configurar_upnp.sh para mapear puertos"
else
    echo "‚ùå UPnP NO DETECTADO"
    echo "   Posibles causas:"
    echo "   ‚Ä¢ UPnP deshabilitado en el router"
    echo "   ‚Ä¢ Firewall bloqueando multicast (239.255.255.250:1900)"
    echo "   ‚Ä¢ Router sin soporte UPnP/IGD"
    echo "   ‚Ä¢ Est√°s detr√°s de otro router/ISP con CGNAT"
    echo ""
    echo "   Soluciones:"
    echo "   1. Habilita UPnP en el panel del router"
    echo "   2. Usa Port Forwarding manual:"
    echo "      ‚Ä¢ UDP 51820 ‚Üí 192.168.101.71:51820 (WireGuard)"
    echo "      ‚Ä¢ TCP 8001 ‚Üí 192.168.101.71:8001 (API)"
    echo "   3. Si hay CGNAT, considera un VPS/t√∫nel externo"
fi

echo ""
echo "üåê Para acceso externo (cuando est√© configurado):"
echo "   API: http://$PUBLIC_IP:8001"
echo "   WireGuard: $PUBLIC_IP:51820"